{"version":3,"sources":["sayHello.js","Tweet.js","App.js","reportWebVitals.js","index.js"],"names":["Hello","onClick","console","log","Tweet","name","message","className","App","useState","isRed","setRed","count","setCount","users","map","user","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAoBeA,EAlBM,WAKjB,OACI,gCAMI,+DACA,wBAAQC,QAZC,WACbC,QAAQC,IAAI,UAWR,uBCXCC,G,MAAQ,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC1B,OACI,sBAAKC,UAAU,QAAf,UACI,+DACA,6BAAKF,IACL,4BAAIC,IACJ,sDCkDGE,MApDf,WAEE,MAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KASA,EAA0BJ,mBAAS,CACjC,CAACJ,KAAK,KAAMC,QAAS,gBACrB,CAACD,KAAK,OAAQC,QAAS,mBACvB,CAACD,KAAK,WAAYC,QAAS,mBAH7B,mBAAOQ,EAAP,KAYA,OAZA,KAcE,cADA,CACA,OAAKP,UAAU,MAAf,UACE,2DACA,cAAC,EAAD,IACA,sBAAKA,UAAU,SAAf,UAGE,cAAC,EAAD,CAAOF,KAAK,SAASC,QAAQ,2BAC7B,cAAC,EAAD,CAAOD,KAAK,YAAYC,QAAQ,uBAChC,cAAC,EAAD,CAAOD,KAAK,QAAQC,QAAQ,kBAC5B,cAAC,EAAD,CAAOD,KAAK,OAAOC,QAAQ,kCAG7B,oBAAIC,UAAWG,EAAQ,MAAQ,GAA/B,8BACA,wBAAQT,QApBM,WAChBY,EAASD,EAAQ,GACjBD,GAAQD,IAkBN,uBACA,6BAAKE,IAEL,qBAAKL,UAAU,SAAf,SACGO,EAAMC,KAAI,SAAAC,GAAI,OACb,cAAC,EAAD,CAAOX,KAAMW,EAAKX,KAAMC,QAASU,EAAKV,mBCxCjCW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAa1Bb,K","file":"static/js/main.096e4962.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Hello = () => {\r\n    const sayHello = () => {\r\n        console.log('hello');\r\n      };\r\n\r\n    return (\r\n        <div>\r\n            {\r\n            /* if we don't add a curly bracket it's html, if we add it's js */\r\n            /*we don't add () to sayHello because it's gonna invoke the function as soon\r\n            as it gets rendered on the screen, so we have a reference to it*/\r\n            }\r\n            <h3>--This is the hello component</h3>\r\n            <button onClick={sayHello}>Hello</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Hello;","import React from 'react'\r\nimport './App.css';\r\n\r\n// destructuring es6\r\nexport const Tweet = ({ name, message }) => {\r\n    return (\r\n        <div className=\"tweet\">\r\n            <h3>--This is the tweet component</h3>\r\n            <h3>{name}</h3>\r\n            <p>{message}</p>\r\n            <h3>Number of likes</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tweet;\r\n\r\n","//Components in React basically return a piece of JSX code that tells \n//what should be rendered on the screen. App is a component\n\nimport React, {useState} from 'react'; // to create a component. not necessary anymore\nimport Hello from './sayHello';\nimport { Tweet } from './Tweet';\n\n// we create the component\nfunction App() {\n\n  const [isRed, setRed] = useState(false);\n  const [count, setCount] = useState(0);\n  \n  /*\n  const [user, setUser] = useState({\n    name:'Ed',\n    age:25,\n    posts: ['my first post', 'my lovely summer']\n  });*/\n\n  const [users, setUsers] = useState([\n    {name:'Ed', message: 'Hello there!'},\n    {name:'John', message: 'I am john snow!'},\n    {name:'traversy', message: 'I am awesome!'},\n  ]);\n\n\n  const increment = () => {\n    setCount(count + 1);\n    setRed(!isRed);\n  };\n\n  return(\n    //it will be compiled to html but it s jsx now  <=> React.creaetelement ..\n    <div className=\"app\">\n      <h1>This is the app component</h1> \n      <Hello />\n      <div className=\"tweets\">\n        {//prop = a property that we can define on each individual component\n        }\n        <Tweet name=\"Dev ED\" message=\"This is a random tweet\"/>\n        <Tweet name=\"John Snow\" message=\"I am the true king\"/>\n        <Tweet name=\"Media\" message=\"700k my dudes\"/>\n        <Tweet name=\"Mosh\" message=\"My new course is available\"/>\n      </div>\n\n      <h1 className={isRed ? 'red' : ''}>Change my color!</h1>\n      <button onClick={increment}>Increment</button>\n      <h1>{count}</h1>\n\n      <div className=\"tweets\">\n        {users.map(user => (\n          <Tweet name={user.name} message={user.message}/>\n        ))}\n      </div>\n    </div>\n  );\n}\n\n// then export the component\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n/*\n--from index.html -> we have a <div id=root\"></div>\n--we don't have any html. Everything gets generated inside one div, so our javascript\ntakes all of our components and it s gonna generate from js to html\n*/\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}